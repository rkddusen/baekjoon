const file = process.platform === "linux" ? "/dev/stdin" : "example.txt";
const input = require("fs").readFileSync(file).toString().trim().split("\n");

let u = [];
let d = [];
let f = [];
let b = [];
let l = [];
let r = [];

const U = (dir) => {
  if (dir === "+") {
    [f[0], f[1], f[2], l[0], l[1], l[2]] = [l[0], l[1], l[2], f[0], f[1], f[2]]; // 앞, 왼
    [f[0], f[1], f[2], r[0], r[1], r[2]] = [r[0], r[1], r[2], f[0], f[1], f[2]]; // 앞, 오
    [r[0], r[1], r[2], b[0], b[1], b[2]] = [b[0], b[1], b[2], r[0], r[1], r[2]]; // 오, 뒤
    [u[2], u[5], u[8], u[7], u[6], u[3], u[0], u[1]] = [
      u[0],
      u[1],
      u[2],
      u[5],
      u[8],
      u[7],
      u[6],
      u[3],
    ];
  } else {
    [f[0], f[1], f[2], r[0], r[1], r[2]] = [r[0], r[1], r[2], f[0], f[1], f[2]]; // 앞, 오
    [f[0], f[1], f[2], l[0], l[1], l[2]] = [l[0], l[1], l[2], f[0], f[1], f[2]]; // 앞, 왼
    [l[0], l[1], l[2], b[0], b[1], b[2]] = [b[0], b[1], b[2], l[0], l[1], l[2]]; // 왼, 뒤
    [u[0], u[1], u[2], u[5], u[8], u[7], u[6], u[3]] = [
      u[2],
      u[5],
      u[8],
      u[7],
      u[6],
      u[3],
      u[0],
      u[1],
    ];
  }
};
const D = (dir) => {
  if (dir === "+") {
    [f[6], f[7], f[8], r[6], r[7], r[8]] = [r[6], r[7], r[8], f[6], f[7], f[8]]; // 앞, 오
    [f[6], f[7], f[8], l[6], l[7], l[8]] = [l[6], l[7], l[8], f[6], f[7], f[8]]; // 앞, 왼
    [l[6], l[7], l[8], b[6], b[7], b[8]] = [b[6], b[7], b[8], l[6], l[7], l[8]]; // 왼, 뒤
    [d[2], d[5], d[8], d[7], d[6], d[3], d[0], d[1]] = [
      d[0],
      d[1],
      d[2],
      d[5],
      d[8],
      d[7],
      d[6],
      d[3],
    ];
  } else {
    [f[6], f[7], f[8], l[6], l[7], l[8]] = [l[6], l[7], l[8], f[6], f[7], f[8]]; // 앞, 왼
    [f[6], f[7], f[8], r[6], r[7], r[8]] = [r[6], r[7], r[8], f[6], f[7], f[8]]; // 앞, 오
    [r[6], r[7], r[8], b[6], b[7], b[8]] = [b[6], b[7], b[8], r[6], r[7], r[8]]; // 오, 뒤
    [d[0], d[1], d[2], d[5], d[8], d[7], d[6], d[3]] = [
      d[2],
      d[5],
      d[8],
      d[7],
      d[6],
      d[3],
      d[0],
      d[1],
    ];
  }
};
const F = (dir) => {
  if (dir === "+") {
    [u[6], u[7], u[8], r[0], r[3], r[6]] = [r[0], r[3], r[6], u[6], u[7], u[8]]; // 위, 오
    [u[6], u[7], u[8], l[8], l[5], l[2]] = [l[8], l[5], l[2], u[6], u[7], u[8]]; // 위, 왼
    [l[8], l[5], l[2], d[2], d[1], d[0]] = [d[2], d[1], d[0], l[8], l[5], l[2]]; // 왼, 밑
    [f[2], f[5], f[8], f[7], f[6], f[3], f[0], f[1]] = [
      f[0],
      f[1],
      f[2],
      f[5],
      f[8],
      f[7],
      f[6],
      f[3],
    ];
  } else {
    [u[6], u[7], u[8], l[8], l[5], l[2]] = [l[8], l[5], l[2], u[6], u[7], u[8]]; // 위, 왼
    [u[6], u[7], u[8], r[0], r[3], r[6]] = [r[0], r[3], r[6], u[6], u[7], u[8]]; // 위, 오
    [r[0], r[3], r[6], d[2], d[1], d[0]] = [d[2], d[1], d[0], r[0], r[3], r[6]]; // 오, 및
    [f[0], f[1], f[2], f[5], f[8], f[7], f[6], f[3]] = [
      f[2],
      f[5],
      f[8],
      f[7],
      f[6],
      f[3],
      f[0],
      f[1],
    ];
  }
};
const B = (dir) => {
  if (dir === "+") {
    [u[0], u[1], u[2], l[6], l[3], l[0]] = [l[6], l[3], l[0], u[0], u[1], u[2]]; // 위, 왼
    [u[0], u[1], u[2], r[2], r[5], r[8]] = [r[2], r[5], r[8], u[0], u[1], u[2]]; // 위, 오
    [r[2], r[5], r[8], d[8], d[7], d[6]] = [d[8], d[7], d[6], r[2], r[5], r[8]]; // 오, 및
    [b[2], b[5], b[8], b[7], b[6], b[3], b[0], b[1]] = [
      b[0],
      b[1],
      b[2],
      b[5],
      b[8],
      b[7],
      b[6],
      b[3],
    ];
  } else {
    [u[0], u[1], u[2], r[2], r[5], r[8]] = [r[2], r[5], r[8], u[0], u[1], u[2]]; // 위, 오
    [u[0], u[1], u[2], l[6], l[3], l[0]] = [l[6], l[3], l[0], u[0], u[1], u[2]]; // 위, 왼
    [l[6], l[3], l[0], d[8], d[7], d[6]] = [d[8], d[7], d[6], l[6], l[3], l[0]]; // 왼, 밑
    [b[0], b[1], b[2], b[5], b[8], b[7], b[6], b[3]] = [
      b[2],
      b[5],
      b[8],
      b[7],
      b[6],
      b[3],
      b[0],
      b[1],
    ];
  }
};
const L = (dir) => {
  if (dir === "+") {
    [u[0], u[3], u[6], f[0], f[3], f[6]] = [f[0], f[3], f[6], u[0], u[3], u[6]]; // 위, 앞
    [u[0], u[3], u[6], b[8], b[5], b[2]] = [b[8], b[5], b[2], u[0], u[3], u[6]]; // 위, 뒤
    [b[8], b[5], b[2], d[0], d[3], d[6]] = [d[0], d[3], d[6], b[8], b[5], b[2]]; // 뒤, 밑
    [l[2], l[5], l[8], l[7], l[6], l[3], l[0], l[1]] = [
      l[0],
      l[1],
      l[2],
      l[5],
      l[8],
      l[7],
      l[6],
      l[3],
    ];
  } else {
    [u[0], u[3], u[6], b[8], b[5], b[2]] = [b[8], b[5], b[2], u[0], u[3], u[6]]; // 위, 뒤
    [u[0], u[3], u[6], f[0], f[3], f[6]] = [f[0], f[3], f[6], u[0], u[3], u[6]]; // 위, 앞
    [f[0], f[3], f[6], d[0], d[3], d[6]] = [d[0], d[3], d[6], f[0], f[3], f[6]]; // 앞, 밑
    [l[0], l[1], l[2], l[5], l[8], l[7], l[6], l[3]] = [
      l[2],
      l[5],
      l[8],
      l[7],
      l[6],
      l[3],
      l[0],
      l[1],
    ];
  }
};
const R = (dir) => {
  if (dir === "+") {
    [u[2], u[5], u[8], b[6], b[3], b[0]] = [b[6], b[3], b[0], u[2], u[5], u[8]]; // 위, 뒤
    [u[2], u[5], u[8], f[2], f[5], f[8]] = [f[2], f[5], f[8], u[2], u[5], u[8]]; // 위, 앞
    [f[2], f[5], f[8], d[2], d[5], d[8]] = [d[2], d[5], d[8], f[2], f[5], f[8]]; // 앞, 밑
    [r[2], r[5], r[8], r[7], r[6], r[3], r[0], r[1]] = [
      r[0],
      r[1],
      r[2],
      r[5],
      r[8],
      r[7],
      r[6],
      r[3],
    ];
  } else {
    [u[2], u[5], u[8], f[2], f[5], f[8]] = [f[2], f[5], f[8], u[2], u[5], u[8]]; // 위, 앞
    [u[2], u[5], u[8], b[6], b[3], b[0]] = [b[6], b[3], b[0], u[2], u[5], u[8]]; // 위, 뒤
    [b[6], b[3], b[0], d[2], d[5], d[8]] = [d[2], d[5], d[8], b[6], b[3], b[0]]; // 뒤, 밑
    [r[0], r[1], r[2], r[5], r[8], r[7], r[6], r[3]] = [
      r[2],
      r[5],
      r[8],
      r[7],
      r[6],
      r[3],
      r[0],
      r[1],
    ];
  }
};

const T = Number(input[0]);
const answer = [];
for (let i = 1; i < input.length; i++) {
  u = ["w", "w", "w", "w", "w", "w", "w", "w", "w"];
  d = ["y", "y", "y", "y", "y", "y", "y", "y", "y"];
  f = ["r", "r", "r", "r", "r", "r", "r", "r", "r"];
  b = ["o", "o", "o", "o", "o", "o", "o", "o", "o"];
  l = ["g", "g", "g", "g", "g", "g", "g", "g", "g"];
  r = ["b", "b", "b", "b", "b", "b", "b", "b", "b"];

  const rotateNum = Number(input[i]);
  i++;
  const rotate = input[i].split(" ");
  for (let j = 0; j < rotateNum; j++) {
    const [l, d] = rotate[j].split("");
    if (l === "U") U(d);
    if (l === "D") D(d);
    if (l === "F") F(d);
    if (l === "B") B(d);
    if (l === "L") L(d);
    if (l === "R") R(d);
  }
  for (let k = 0; k < 3; k++) {
    answer.push(u[3 * k] + u[3 * k + 1] + u[3 * k + 2]);
  }
}

console.log(answer.join("\n"));
